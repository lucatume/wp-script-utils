// Generated by CoffeeScript 1.9.2
(function() {
  var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  (function($) {
    var InvertedRowToggle, RowToggle, hookBus;
    hookBus = window.hookBus = window.hookBus || _.extend({}, Backbone.Events);
    RowToggle = (function(superClass) {
      extend(RowToggle, superClass);

      function RowToggle() {
        this.getTarget = bind(this.getTarget, this);
        this.toggleTargetVisibility = bind(this.toggleTargetVisibility, this);
        this.hideRow = bind(this.hideRow, this);
        this.showRow = bind(this.showRow, this);
        return RowToggle.__super__.constructor.apply(this, arguments);
      }

      RowToggle.$row = null;

      RowToggle.prototype.events = {
        click: 'toggleTargetVisibility'
      };

      RowToggle.prototype.showRow = function() {
        return this.$row.show();
      };

      RowToggle.prototype.hideRow = function() {
        return this.$row.hide();
      };

      RowToggle.prototype.toggleTargetVisibility = function() {
        if (this.el.checked) {
          return this.showRow();
        } else {
          return this.hideRow();
        }
      };

      RowToggle.prototype.getTarget = function() {
        return this.$el.data('toggle-target');
      };

      RowToggle.prototype.initialize = function() {
        var rows, target, targets;
        target = this.getTarget();
        targets = target.split(',');
        rows = [];
        _.each(targets, function(selector) {
          return rows.push('.cmb-row.cmb2-id-' + selector);
        });
        this.$row = $(rows.join(','));
        return this.toggleTargetVisibility();
      };

      return RowToggle;

    })(Backbone.View);
    InvertedRowToggle = (function(superClass) {
      extend(InvertedRowToggle, superClass);

      function InvertedRowToggle() {
        this.hideRow = bind(this.hideRow, this);
        this.showRow = bind(this.showRow, this);
        this.getTarget = bind(this.getTarget, this);
        return InvertedRowToggle.__super__.constructor.apply(this, arguments);
      }

      InvertedRowToggle.prototype.getTarget = function() {
        return this.$el.data('invert-toggle-target');
      };

      InvertedRowToggle.prototype.showRow = function() {
        return this.$row.hide();
      };

      InvertedRowToggle.prototype.hideRow = function() {
        return this.$row.show();
      };

      return InvertedRowToggle;

    })(RowToggle);
    return hookBus.on('initUi:5', function() {
      _.each($('input[type="checkbox"][data-toggle-target]'), function(el) {
        return new RowToggle({
          el: $(el)
        });
      });
      return _.each($('input[type="checkbox"][data-invert-toggle-target]'), function(el) {
        return new InvertedRowToggle({
          el: $(el)
        });
      });
    });
  })(jQuery);

}).call(this);
